fullname: node-app
replicaCount: 2
namespace: node92
labels:
  app: node-app
revisionHistoryLimit: 10

# Deployment strategy configuration
deploymentStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 1

image:
  repository: docker.io/paphat82/node
  tag: latest
  # tag: v2

containers:
  - name: node-container
    image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
    ports:
      - containerPort: 3000
    env:
      - name: TZ
        value: "Asia/Bangkok"
    resources: 
      limits:
        memory: 3Gi
        cpu: '1'
      requests:
        memory: 50Mi
        cpu: 50m  
    livenessProbe: {}
    startupProbe: {}
    readinessProbe: {}

service:
  enabled: true
  type: ClusterIP
  port: 3000

volumes:
  create_PV: true
  labels:
    app: app-node
    environment: production
  PersistentVolumeTemplate:
    capacity:
      storage: 10Gi
    accessModes:
      - ReadWriteOnce
    storageClassName: longhorn
    hostPath:
      path: /mnt/disks/my-disk

volumeClaims:
  create_PVC: true
  labels:
    app: app-node
    environment: production
  PersistentVolumeClaimTemplate:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 10Gi
    storageClassName: longhorn

secret:
  create: true
  encryptedData:
    # Example encrypted data. Replace with actual encrypted data.
    # DB_PASSWORD: AgAnv8aUF032Xw4gJrpr/seEs9o4SdeMxpwbnSDWBuGcx36+VoQ0IM3OWfHQomGf/M4xc0ufGuqF8/UWzNNnWPrWsOvK0ozpSX+xgxiUCfm4WKIvVJoW5dZ9D4X9hSrOSlQ4VKej3xCfDU8R1OJVjQZFPOo8Y2Xq6SSrX+IocMTMC10KQ4gDut0Pb0/QD6eOaQlqf85fIPk5nylc0XHvYbhLyhNp1xIWtVx0UE5LdwsE9PXRHaoeM

serviceAccount:
  create: false
  use_existing: false
  annotations: {}
  name: ""
